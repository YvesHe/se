主要讲解   同步容器   和 并发容器


同步容器：
Hashtable、Vector

并发容器:
CopyOnWriteArrayList和CopyOnWriteArraySet和ConcurrentHashMap
CopyOnWrite容器非常有用，可以在非常多的并发场景中使用到。（可以自定义CopyOnWrite容器）


非阻塞队列:PriorityQueue、LinkedList（LinkedList是双向链表，它实现了Dequeue接口）。
另外一类容器：阻塞队列



生产者消费者模式的应用：
使用阻塞队列代码要简单得多，不需要再单独考虑同步和线程间通信的问题。
在并发编程中，一般推荐使用阻塞队列，这样实现可以尽量地避免程序出现意外的错误。
阻塞队列使用最经典的场景就是socket客户端数据的读取和解析，读取数据的线程不断将数据放入队列，
然后解析线程不断从队列取数据解析。
还有其他类似的场景，只要符合生产者-消费者模型的都可以使用阻塞队列。